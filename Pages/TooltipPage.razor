@page "/tooltip"

@inject TooltipService tooltipService

<RadzenExample Name="Tooltip" Documentation="true" AdditionalSourceCodePages="@(new List<string>() { "TooltipCardPage.razor" })">
    <div class="row">
        <div class="col-md-6">
            <h3>Page as tooltip</h3>
            <button @ref="showOrderButton" @onmouseover="@(args => tooltipService.Open<TooltipCardPage>(
                        showOrderButton,
                        new Dictionary<string, object>() { { "OrderID", orderID } },
                        new TooltipOptions(){ Style = $"width: 600px; height: 300px" }))">
                @($"Show OrderID: {orderID} details")
            </button>

            <h3 style="margin-top: 20px;">Show tooltip on mouse over Radzen component</h3>
            <RadzenButton @ref="radzenButton1" Text="Show tooltip" @onmouseover="@(args => ShowTooltip(radzenButton1.Element) )"/>
            <br />
            <h3 style="margin-top: 20px;">Show tooltip on mouse over Radzen component and close it on mouse out</h3>
            <RadzenButton @ref="radzenButton2" Text="Show tooltip" @onmouseover="@(args => ShowTooltip(radzenButton2.Element))" @onmouseout="@(args => tooltipService.Close())" />
            <br />
            <h3 style="margin-top: 20px;">Show tooltip on click</h3>
            <RadzenButton @ref="radzenButton3" Text="Show tooltip" Click="@(args => ShowTooltip(radzenButton3.Element))" />
            <br />
            <h3 style="margin-top: 20px;">Show tooltip on click with style</h3>
            <RadzenButton @ref="radzenButton4" Text="Show tooltip" Click="@(args => ShowTooltip(radzenButton4.Element, "background-color: red;"))" />
            <br />
            <h3 style="margin-top: 20px;">Show tooltip on mouse over HTML elment</h3>
            <button @ref="htmlButton" @onmouseover="@(args => ShowTooltip(htmlButton))" @onmouseout="@(args => tooltipService.Close())">
                @($"Show tooltip")
            </button>
        </div>
        <div class="col-md-6">
            <h3>Events</h3>
            <RadzenCard style="overflow: auto;height:500px;">
                @foreach (var e in events.OrderByDescending(i => i.Key))
                {
                    @e.Value
                    <br />
                }
            </RadzenCard>
        </div>
    </div>
</RadzenExample>

@code {
    ElementReference showOrderButton;
    ElementReference htmlButton;
    RadzenButton radzenButton1;
    RadzenButton radzenButton2;
    RadzenButton radzenButton3;
    RadzenButton radzenButton4;

    int orderID = 10248;

    Dictionary<DateTime, string> events = new Dictionary<DateTime, string>();

    protected override void OnInitialized()
    {
        tooltipService.OnOpen += Open;
        tooltipService.OnClose += Close;
    }

    void Open(ElementReference element, Type type, Dictionary<string, object> parameters, TooltipOptions options)
    {
        events.Add(DateTime.Now, "Tooltip opened");
        StateHasChanged();
    }

    void Close()
    {
        events.Add(DateTime.Now, "Tooltip closed.");
        StateHasChanged();
    }

    void ShowTooltip(ElementReference elementReference, string style = "") => tooltipService.Open(elementReference, ds =>
        @<RadzenCard Style="@($"padding: 20px;{style}")">
        <div class="row">
            <div class="col-md-12">
                Some content
            </div>
        </div>
    </RadzenCard>);
}
